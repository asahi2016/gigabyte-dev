<?php

function project_support_request_init(){

    drupal_add_js(drupal_get_path('module', 'custom').'/project_support_request/js/project_request.js');
}

function project_support_request_menu(){

    $items['admin/config/project_support']= array(
        'type' => MENU_CALLBACK,
        'access callback' => TRUE,
    );
    return $items;
}

//alter the webform component elements
function project_support_request_webform_component_render_alter(&$element, &$component) {

    if ($component['type'] = 'textfield' && $component['required'] = 1 ) {
        unset($element['#attributes']['required']);
        unset($element['#webform_component']['required']);
    }
}

//alter the webform for project support request form elements
function project_support_request_form_webform_client_form_76_alter( &$form, &$form_state, $form_id){

    foreach ($form['#node']->webform['components'] as &$field){
        if (is_array($field) && isset($field['required']) && $field['#required'] = 1){
                $field['required'] = false;
    }

}
    $form['#validate'][] = 'project_support_request_form_validation';
    $form['#submit'][] = 'project_support_request_form_submit';

    if($form_id == 'webform_client_form_76'){
        $form['actions']['reset'] = array(
            '#type' => 'button',
            '#value' => t('Reset'),
            '#weight' => 100,
            '#validate' => array(),
            '#attributes' => array('onclick' => 'this.form.reset(); return false;'),
        );

    }

    // set default country selection for logged in users
    if(user_is_logged_in() && !user_access('administer users'))
    {
        global $user;

        $user_info = user_load($user->uid);
        $country_id = $user_info->field_country['und'][0]['tid'];
        if($country_id == 2){
            $form['submitted']['country']['#default_value'] = "2|Canada";
        }
        else
        {
            $form['submitted']['country']['#default_value'] = "1|USA";
        }
    }

    return $form;
}
//validate the project support request form
function project_support_request_form_validation(&$form, &$form_state){

    $first_name = $form_state['values']['submitted']['first_name'];
    $last_name = $form_state['values']['submitted']['last_name'];
    $company_name = $form_state['values']['submitted']['company_name'];
    $job_title = $form_state['values']['submitted']['job_title'];
    $contact_number = $form_state['values']['submitted']['contact_number'];
    $email_address = $form_state['values']['submitted']['email_address'];
    $address_1 = $form_state['values']['submitted']['address_1'];
    $address_2 = $form_state['values']['submitted']['address_2'];
    $city = $form_state['values']['submitted']['city'];
    $state = $form_state['values']['submitted']['state'];
    $country = $form_state['values']['submitted']['country'];
    $zip_code = $form_state['values']['submitted']['zip_code'];
    $project_type = $form_state['values']['submitted']['project_type'];
    $unit_price_range = $form_state['values']['submitted']['unit_price_range'];
    $preferred_motherboard_model = $form_state['values']['submitted']['preferred_motherboard_model'];
    $project_details = $form_state['values']['submitted']['project_details'];

    if(!preg_match('/^[A-Za-z ]+$/',$first_name)){
        form_set_error('submitted][first_name','First Name Allowed only characters');
    }
    if(!preg_match('/^[A-Za-z ]+$/',$last_name)){
        form_set_error('submitted][last_name','Last Name Allowed only characters');
    }
    if(!preg_match('/^[A-Za-z ]+$/',$job_title)){
        form_set_error('submitted][job_title','Company Name Allowed only characters');
    }
    if(!is_numeric($contact_number)) {
        form_set_error('submitted][contact_number','Please enter valid contact number');
    }

    if(!preg_match('/^[A-Za-z ]+$/',$city)){
        form_set_error('submitted][city','Please enter valid city');
    }
    if(!preg_match('/^[A-Za-z ]+$/',$state)){
        form_set_error('submitted][state','Please enter valid state');
    }
    if(!filter_var($email_address, FILTER_VALIDATE_EMAIL)){
        form_set_error('submitted][email_address','Please enter valid email address');
    }
    if(strlen($project_details) > 500){
        form_set_error('submitted][project_details','Project Details allows maximum 500 characters');
    }

    project_support_request_errors_reset($form);
}
function project_support_request_form_submit($form, &$form_state){

   //drupal_set_message('Request sent successfully, we will contact you soon');

}

// Showing custom errors to users
function project_support_request_errors_reset(&$element)
{

    // Check for errors and settings
    $errors = form_get_errors();

    if (!isset($_SESSION['messages'])) {
        return;
    }

    $reset_errors = array();

    // Recurse through all children.
    foreach (element_children($element) as $key) {
        if (isset($element[$key]) && $element[$key]) {
            $reset_errors += project_support_request_errors_reset($element[$key]);
        }
    }

    $element_id = implode('][', $element['#parents']);

    if (!empty($errors[$element_id]) && !empty($_SESSION['messages']['error'])) {
        $error_message = $errors[$element_id];

        // Get error id
            $error_id = array_search($error_message, $_SESSION['messages']['error']);

        if ($error_id !== FALSE) {
            unset($_SESSION['messages']['error'][$error_id]);
            $_SESSION['messages']['error'] = array_values($_SESSION['messages']['error']);

            if (count($_SESSION['messages']['error']) <= 0) {
                unset($_SESSION['messages']['error']);
            }
        }
            switch ($element['#type']) {
                case 'textfield':
                    $error_message = str_replace(':', ' ', $error_message);
                    $error_message = str_replace('field is required', 'cannot be empty', $error_message);
                    break;
                case 'textarea':
                    $error_message = str_replace(':', ' ', $error_message);
                    $error_message = str_replace('field is required', 'cannot be empty', $error_message);
                    break;
                case 'radio':
                    $error_message = str_replace($error_message, 'Please select your country', $error_message);
                    break;
                case 'select':
                    switch($element['#id']) {
                        case 'edit-submitted-project-type':
                            $error_message = str_replace($error_message, 'Please select your project type', $error_message);
                            break;
                        case 'edit-submitted-unit-price-range':
                            $error_message = str_replace($error_message, 'Please select your unit price range', $error_message);
                            break;
                    }
                    break;
            }

            $element['#suffix'] = '<span class="custom-error ' . $element['#id'] . '" >' . $error_message . '</span>';
            $reset_errors[$element['#id']] = $error_message;
        }

    return $reset_errors;

}
