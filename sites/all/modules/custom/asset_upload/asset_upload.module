<?php


function asset_upload_form_product_roadmap_form_entityform_edit_form_alter(&$form, &$form_state){
   $form['#submit'][] = 'product_roadmap_form_submission';
}

function product_roadmap_form_submission($form, &$form_state){
   // $form_state['rebuild'] = TRUE;
   // print_pre($form_state,1);
}

function asset_upload_form_asset_upload_form_entityform_edit_form_alter(&$form, &$form_state, $form_id){
    // Remove preview button
    global $base_url;
    unset($form['actions']['preview']);
   if(isset($_GET['success'])){
       drupal_set_message("The asset you have submitted has been successfully uploaded!");
   }
    $form_state['redirect'] = 'partner/upload-assets';
    //print_pre($form_state,1);
}

function getRoundedsize($bytes){
    $decimals = 2;
    $size = array('B','kB','MB','GB','TB','PB','EB','ZB','YB');
    $factor = floor((strlen($bytes) - 1) / 3);
    return sprintf("%.{$decimals}f", $bytes / pow(1024, $factor)) . @$size[$factor];

}

/**
 * View alter to display the file info for each file type for TAL nodes
 * @param $view
 *
 */

function asset_upload_views_pre_render(&$view) {
    global $user;
    $usr = user_load($user->uid);
    foreach($usr->roles as $key => $value){
        if($key != 2){
            $role['value'] = $value;
            $role['id'] = $key;
        }
    }
    //print_pre($role,1);
    global $base_url;
    drupal_add_js($base_url.'/sites/all/modules/custom/make_a_request/js/dataTables.bootstrap.min.js');
    drupal_add_js($base_url.'/sites/all/modules/custom/make_a_request/js/jquery.dataTables.min.js');
    drupal_add_js($base_url.'/sites/all/modules/custom/make_a_request/js/dataTables.buttons.min.js');
    drupal_add_js($base_url.'/sites/all/modules/custom/asset_upload/js/custom.js');
    switch($view->name){
        case 'clone_of_entityforms':
            //print_pre($view->result,1);
            foreach($view->result as $key => $value){
                //print_pre($value,1);
                $file_data = array();
                $roles_permitted = array();
                $access = false;
                foreach($value->field_field_permitted_roles as $rkey => $rval){
                    $role_permitted[] = $rval['raw']['rid'];
                    if($role['id'] == $rval['raw']['rid']){
                        $access = true;
                    }
                }
                if (in_array('administrator', array_values($user->roles))) {
                    $access = true;
                }
                if($access) {
                    if (!empty($value->field_field_upload_file)) {

                        $lcount = 0;
                        $cnt = count($value->field_field_upload_file);
                        foreach ($value->field_field_upload_file as $k => $v) {
                            if($lcount <= 0) {
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] = "<table class='download-file-type-info-table'>";
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= "<tr><th>Download</th>";
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= "<th>Resolution</th>";
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= "<th>Dimension</th>";
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= "<th>Size</th></tr>";
                            }else{
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] = '';
                            }

                            foreach ($v['rendered']['entity']['field_collection_item'] as $ke => $val) {
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= "<tr>";
                                if (!empty($val['#entity']->field_upload_asset['und'][0])) {
                                    $file_data['file'] = $val['#entity']->field_upload_asset['und'][0];
                                    $file_data['res'] = $val['#entity']->field_asset_resolution['und'][0];

                                }else{
                                    $file_data['file']['uri'] = "noimage.png";
                                    $file_data['file']['filename'] = "noimage";
                                    $file_data['file']['filesize'] = "0 KB";
                                    $file_data['file']['metadata']['height'] = "0";
                                    $file_data['file']['metadata']['width'] = "0";
                                    $file_data['res']['value'] = '0';
                                }
                                $ext = explode(".", $file_data['file']['uri']);
                                if (($file_data['file']['filesize'] / 1000) <= 1023) {
                                    $size = round(($file_data['file']['filesize'] / 1024), 2) . ' KB';
                                } else if (($file_data['file']['filesize'] / 1000) > 1023) {
                                    $size = round(($file_data['file']['filesize'] / (1024 * 1024)), 2) . ' MB';
                                }
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '<td><a href="' . $base_url . '/sites/default/files/file_uploads/assets/' . $file_data['file']['filename'] . '" target="_blank">' . strtoupper($ext[count($ext) - 1]) . '</a> </td>';
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '<td><p class="internal-asset-info-p">' . $file_data['res']['value'] . '</p></td>';
                                if (!empty($file_data['file']['metadata']['width']) && !empty($file_data['file']['metadata']['height'])) {
                                    $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '<td><p class="internal-asset-info-p">' . $file_data['file']['metadata']['width'] . ' x ' . $file_data['file']['metadata']['height'] . '</p></td>';
                                } else {
                                    $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '<td><p class="internal-asset-info-p">-</p></td>';
                                }
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '<td><p class="internal-asset-info-p">' . $size . '</p></td>';
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '</tr>';

                            }

                            $lcount++;
                            if($cnt == $lcount){
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '</table>';
                            }


                        }

                    } else {
                        $file_data['file']['uri'] = "noimage.png";
                    }
                    $view->result[$key]->field_field_image_preview_assets[0]['rendered']['#markup'] = "<a class='assets-preview-image' href='".image_style_url('large',$file_data['file']['uri'])."' ><img src='".image_style_url('medium',$file_data['file']['uri'])."'></a>";
                    unset($file_data);
                }else{
                    unset($view->result[$key]);
                }
            }
            break;
        case 'asset_download_history':
            //print_pre($view->result,1);
            foreach($view->result as $key => $value){
                $img = explode('/',$value->asset_download_history_file);
                $image = $img[count($img)-1];

                $value->asset_download_history_file = $image;
                $value->asset_download_history_file_preview = html_entity_decode('<img src="'.image_style_url('thumbnail', $value->asset_download_history_file_preview).'" >');
            }
            //print_pre($view->result);
            break;
        case 'calendar_events_view':
            //print_pre($view->result,1);
            foreach($view->result as $key => $value){
                //print_pre(count($value->field_field_event_country));
                if(count($value->field_field_event_country) == 1) {
                    if ($value->field_field_event_country[0]['raw']['tid'] == 1) {
                        $value->field_field_event_country[0]['rendered']['#markup'] = '<img src="' . $base_url . '/themes/bartik/images/usa.jpg" alt="usa-event" />';
                    }
                    if ($value->field_field_event_country[0]['raw']['tid'] == 2) {
                        $value->field_field_event_country[0]['rendered']['#markup'] = '<img src="' . $base_url . '/themes/bartik/images/ca.jpg" alt="usa-event" />';
                    }
                }
                if(count($value->field_field_event_country) > 1) {
                    foreach($value->field_field_event_country as $k => $v){
                        if($v['raw']['tid'] == 1){
                            $value->field_field_event_country[$k]['rendered']['#markup'] = '<img src="' . $base_url . '/themes/bartik/images/usa.jpg" alt="usa-event" />';
                        }
                        if($v['raw']['tid'] == 2){
                            $value->field_field_event_country[0]['rendered']['#markup'] = '<img src="' . $base_url . '/themes/bartik/images/ca.jpg" alt="canada-event" />';
                        }
                    }
                }
            }
            break;
        case 'product_roadmap_amd':
            //print_pre($view->result,1);
            foreach($view->result as $key => $value){
                if($key != 0){
                    unset($view->result[$key]);
                }
            }
            break;
        case 'product_roadmap_brix':
            //print_pre($view->result,1);
            foreach($view->result as $key => $value){
                if($key != 0){
                    unset($view->result[$key]);
                }
            }
            break;
        case 'product_roadmap_intel':
            //print_pre($view->result,1);
            foreach($view->result as $key => $value){
                if($key != 0){
                    unset($view->result[$key]);
                }
            }
            break;
    }
}

/**
 * Hooks menu
 */

function asset_upload_menu(){
    $items['partner/asset/store/history'] = array(
        'page callback' => 'asset_upload_store_download_history',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );
    return $items;
}

/**
 * Ajax callback function to store Assets Download info
 */

function asset_upload_store_download_history(){
    global $user;
    $usr = user_load($user->uid);
    $name = $usr->name;
    $email = $usr->mail;
    $download_date = date('Y-m-d h:i:s');
    //print_pre($usr->roles,1);
    foreach($usr->roles as $key => $value){
        if($key != 2){
            $role = $value;
        }
    }
    $img = explode('/',$_POST['image']);
    $image =$_POST['image'];
    $nid = db_insert('asset_download_history')
        ->fields(array(
            'name' => $name,
            'email' => $email,
            'role' => $role,
            'file' => $img[count($img)-1],
            'download_date' => $download_date,
            'file_preview' => $image
        ))
        ->execute();

    if(!$nid){
        echo "Error";
        drupal_set_message('Something went wrong while trying to download file!','error');
        return false;
    }else{
        echo "Saved";
        echo $nid;
    }
}