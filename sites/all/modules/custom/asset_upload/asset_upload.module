<?php



function asset_upload_form_tools_assets_logos_node_form_alter(&$form, &$form_state, $form_id){
    // Remove preview button
    unset($form['actions']['preview']);
    // Get the system roles.
    $roles = user_roles(FALSE, NULL);
    unset($roles[3], $roles[4], $roles[1], $roles[2]);
    /*print_r($roles);
    exit;*/

    //print_pre($form,1);
    $form['trc_user_roles'] = array(
        '#type' => 'checkboxes',
        '#title' => 'Allow users who can see uploaded files',
        '#options' => $roles,
        '#descripion' => 'User roles checked are able to see site-wide uploads.',
        '#default_value' => variable_get('trc_user_roles', array()),
        '#weight' => 30
    );

   $form['ajax-submit']['#value'] = 'Submit';
    $form['#submit'][] = 'save_asset_permissions';
      //return $form;
}


function save_asset_permissions(&$form, &$form_state){
    //print_pre($form_state['input']);
    $permitted = $form_state['input']['trc_user_roles'];
    $permitted_role = array();
    foreach($permitted as $permit){
        if(!empty($permit)){
            $permitted_role[] = $permit;
        }
    }
    //get user ID
    global $user;
    $userid = $user->uid;
    // Get File ID
    $image_array = array();
    $image_array['jpg_fileid'] = $form_state['input']['field_jpg']['und'][0]['field_upload_jpg']['und'][0]['fid'];
    $image_array['png_fileid'] = $form_state['input']['field_png']['und'][0]['field_upload_png']['und'][0]['fid'];
    $image_array['pdf_fileid'] = $form_state['input']['field_pdf']['und'][0]['field_upload_file_pdf']['und'][0]['fid'];
    $images = serialize($image_array);
    // Get Permitted roles
    $roles_permitted = serialize($permitted_role);
    // Get Image Resolution
    $img_resolution = array();
    $img_resolution['jpg'] = $form_state['input']['field_jpg']['und'][0]['field_resolution_jpg']['und'][0]['value'];
    $img_resolution['png'] = $form_state['input']['field_png']['und'][0]['field_resolution_png']['und'][0]['value'];
    $resolution = serialize($img_resolution);
    //$img_resolution['pdf'] = $form_state['input']['field_jpg']['und'][0]['field_resolution_jpg']['und'][0]['value'];
    // Get Image Dimension
    $img_dimension = array();
    $img_dimension['jpg'] = $form_state['input']['field_jpg']['und'][0]['field_dimension_jpg']['und'][0]['image_style'];
    $img_dimension['png'] = $form_state['input']['field_png']['und'][0]['field_dimension_png']['und'][0]['image_style'];
    $dimension = serialize($img_dimension);
    // Get creation timestamp
    $created_at = date('Y-m-d h:i:s');
    // Get category ID
    $category_id = serialize($form_state['input']['field_image_asset_category']['und']);
    //DB Insert
    if(empty($image_array)){
        echo "Upload atleastone image type";
    }
    //print_pre($image_array,1);
    if(!empty($userid) && !empty($image_array) && !empty($category_id) && !empty($roles_permitted)){
        $nid = db_insert('asset_uploads')
            ->fields(array(
                'uid' => $userid,
                'fid' => $images,
                'cid' => $category_id,
                'permitted_roles' => $roles_permitted,
                'img_resolution' => $dimension,
                'dpi' => $resolution,
                'created_at' => $created_at,
            ))
            ->execute();
    }else{
       drupal_set_message('Some of the fields are empty');
    }
    drupal_goto('partner/upload-assets');
}

/*function asset_upload_views_default_views_alter(&$views) {
    print_pre($views,1);
    if (isset($views['asset_uploads'])) {
        $views['taxonomy_term']->display['default']->display_options['title'] = 'Categories';
    }
}*/

function asset_upload_views_pre_render(&$view) {
   //print_pre($view,1);
    // This example alters the title of the node:nid field in the Views UI.
   // global $image_url;

    global $base_url;
    drupal_add_js($base_url.'/sites/all/modules/custom/make_a_request/js/dataTables.bootstrap.min.js');
    drupal_add_js($base_url.'/sites/all/modules/custom/make_a_request/js/jquery.dataTables.min.js');
    drupal_add_js($base_url.'/sites/all/modules/custom/make_a_request/js/dataTables.buttons.min.js');
    switch($view->name){
        case 'assets_upload_view':
            //print_pre($view->result);
            foreach($view->result as $key => $value){
                $file_data = array();
                foreach($view->result as $key => $value){
                    $file_data = array();
                    //print_pre($value,1);
                    if(!empty($value->field_field_jpg)){
                        foreach($value->field_field_jpg[0]['rendered']['entity']['field_collection_item'] as $k => $v){
                            //print_pre($v,1);
                            if(!empty($v['field_resolution_jpg']['#object']->field_upload_jpg)){
                                //print_pre($v);
                                $file_data = $v['field_resolution_jpg']['#object']->field_upload_jpg['und'][0];
                            }else{
                                foreach($value->field_field_png[0]['rendered']['entity']['field_collection_item'] as $k => $v){
                                    if(!empty($v['field_resolution_png']['#object']->field_upload_png)){
                                        $file_data = $v['field_resolution_png']['#object']->field_upload_png['und'][0];
                                    }else{
                                        $file_data['uri'] = "noimage.png";
                                    }
                                }
                                break;
                            }
                        }
                    }else{
                        if(!empty($value->field_field_png)){

                            foreach($value->field_field_png[0]['rendered']['entity']['field_collection_item'] as $k => $v){
                                if(!empty($v['field_resolution_png']['#object']->field_upload_png)){
                                    $file_data = $v['field_resolution_png']['#object']->field_upload_png['und'][0];
                                }else{
                                    $file_data['uri'] = "noimage.png";
                                }
                                break;
                            }
                        }else{
                            $file_data['uri'] = "noimage.png";
                        }
                        break;
                    }
                    if(!empty($value->field_field_png)) {
                        //print_pre($value->field_field_png);
                        foreach ($value->field_field_png[0]['rendered']['entity']['field_collection_item'] as $k => $v) {
                            if (!empty($v['field_resolution_png']['#object']->field_upload_png)) {
                                $file_data_png = $v['field_resolution_png']['#object']->field_upload_png['und'][0];
                            } else {
                                $file_data_png['uri'] = "noimage.png";
                            }
                        }
                        if(empty($v['field_resolution_png']['#object']->field_upload_png)){
                            $value->field_field_png[0]['rendered']['links']= '';
                        }
                    }
                    $rev_id_jpg = $view->result[$key]->_field_data['nid']['entity']->field_jpg['und'][0]['value'];
                    $rev_id_png = $view->result[$key]->_field_data['nid']['entity']->field_png['und'][0]['value'];
                    $view->result[$key]->field_field_jpg[0]['rendered']['entity']['field_collection_item'][$rev_id_jpg]['field_dimension_jpg']['#markup'] = "<div class='field field-name-field-dimension-jpg field-type-file field-label-inline clearfix'><div class='field-label'>Dimensions:</div><div class='field-items'><div class='field-item even'>{$file_data['width']} X {$file_data['height']}</div></div></div>";
                    if(!empty($file_data_png['fid'])){
                        $view->result[$key]->field_field_png[0]['rendered']['entity']['field_collection_item'][$rev_id_png]['field_dimension_png']['#markup'] = "<div class='field field-name-field-dimension-jpg field-type-file field-label-inline clearfix'><div class='field-label'>Dimensions:</div><div class='field-items'><div class='field-item even'>{$file_data_png['width']} X {$file_data_png['height']}</div></div></div>";
                    }
                    if(!empty($file_data)){
                        $view->result[$key]->field_field_assets_image_preview[0]['rendered']['#markup'] = "<a class='assets-preview-image' href='".image_style_url('large',$file_data['uri'])."' ><img src='".image_style_url('medium',$file_data['uri'])."'></a>";
                    }else{
                        if(!empty($file_data_png['fid'])){
                            $view->result[$key]->field_field_assets_image_preview[0]['rendered']['#markup'] = "<a class='assets-preview-image' href='".image_style_url('large',$file_data_png['uri'])."' ><img src='".image_style_url('medium',$file_data_png['uri'])."'></a>";
                        }
                    }
                    unset($file_data);
                    unset($file_data_png);
                }
            }
        break;
        case 'asset_upload_partner_view':
            //print_pre($view->result);
            foreach($view->result as $key => $value){
                $file_data = array();
                foreach($view->result as $key => $value){
                    $file_data = array();
                    // print_pre($value,1);
                    if(!empty($value->field_field_jpg)){
                        foreach($value->field_field_jpg[0]['rendered']['entity']['field_collection_item'] as $k => $v){
                            //print_pre($v,1);
                            if(!empty($v['field_resolution_jpg']['#object']->field_upload_jpg)){
                                //print_pre($v);
                                $file_data = $v['field_resolution_jpg']['#object']->field_upload_jpg['und'][0];
                            }else{
                                foreach($value->field_field_png[0]['rendered']['entity']['field_collection_item'] as $k => $v){
                                    if(!empty($v['field_resolution_png']['#object']->field_upload_png)){
                                        $file_data = $v['field_resolution_png']['#object']->field_upload_png['und'][0];
                                    }else{
                                        $file_data['uri'] = "noimage.png";
                                    }
                                }
                                break;
                            }
                        }
                    }else{
                        if(!empty($value->field_field_png)){
                            foreach($value->field_field_png[0]['rendered']['entity']['field_collection_item'] as $k => $v){
                                if(!empty($v['field_resolution_png']['#object']->field_upload_png)){
                                    $file_data = $v['field_resolution_png']['#object']->field_upload_png['und'][0];
                                }else{
                                    $file_data['uri'] = "noimage.png";
                                }
                                break;
                            }
                        }else{
                            $file_data['uri'] = "noimage.png";
                        }
                        break;
                    }

                    $view->result[$key]->field_field_assets_image_preview[0]['rendered']['#markup'] = "a class='assets-preview-image' href='".image_style_url('medium',$file_data['uri'])."' ><img src='".image_style_url('medium',$file_data['uri'])."'></a>";
                    unset($file_data);
                }
            }
            break;
    }
}