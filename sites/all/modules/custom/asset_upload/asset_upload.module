<?php



function asset_upload_form_asset_upload_form_entityform_edit_form_alter(&$form, &$form_state, $form_id){
    // Remove preview button
    unset($form['actions']['preview']);
   if(isset($_GET['success'])){
       drupal_set_message("The asset you have submitted has been successfully uploaded!");
   }
}

function getRoundedsize($bytes){
    $decimals = 2;
    $size = array('B','kB','MB','GB','TB','PB','EB','ZB','YB');
    $factor = floor((strlen($bytes) - 1) / 3);
    return sprintf("%.{$decimals}f", $bytes / pow(1024, $factor)) . @$size[$factor];

}
function save_asset_permissions(&$form, &$form_state){
    //print_pre($form_state['input'],1);
    $title = $form_state['input']['title'];
    $permitted = $form_state['input']['trc_user_roles'];
    $resellers = !empty($permitted[5])?$permitted[5]:'';
    $distributors = !empty($permitted[6])?$permitted[6]:'';
    $partners = !empty($permitted[7])?$permitted[7]:'';
    $system_integrators = !empty($permitted[8])?$permitted[8]:'';
    $gigabyte_employees = !empty($permitted[9])?$permitted[9]:'';
    $esf = !empty($permitted[10])?$permitted[10]:'';
    $new_users = !empty($permitted[11])?$permitted[11]:'';

    $permitted_role = array();
    foreach($permitted as $permit){
        if(!empty($permit)){
            $permitted_role[] = $permit;
        }
    }
    //get user ID
    global $user;
    $userid = $user->uid;
    // Get File ID
    $image_array = array();
    $fid = $form_state['input']['field_jpg']['und'][0]['field_upload_file_asset']['und'][0]['fid'];
    // Get file path from file_managed table
    $file = db_query('SELECT filename,uri FROM file_managed WHERE fid = '.$fid)->fetchAll();
    $filename = $file[0]->filename;
    $filepath = $file[0]->uri;
    //print_pre($file,1);
    $file_info = image_get_info($filepath);
    $dimension = $file_info['width'].' X '.$file_info['height'];
    $extension = $file_info['extension'];
    $filesize = getRoundedsize($file_info['file_size']);
    //print_pre($file_info,1);
    // Get Permitted roles
    $roles_permitted = serialize($permitted_role);
    // Get Image Resolution
    $img_resolution = $form_state['input']['field_jpg']['und'][0]['field_resolution_dpi_asset']['und'][0]['value'];
    //$img_resolution['pdf'] = $form_state['input']['field_jpg']['und'][0]['field_resolution_jpg']['und'][0]['value'];
    // Get Image Dimension

    // Get creation timestamp
    $created_at = date('Y-m-d h:i:s');
    // Get category ID
    $category_id = serialize($form_state['input']['field_image_asset_category']['und']);
    //DB Insert
    //print_pre($image_array,1);
    if(!empty($userid) && !empty($filepath)){
        $nid = db_insert('asset_uploads')
            ->fields(array(
                'uid' => $userid,
                'cid' => $category_id,
                'created_at' => $created_at,
                'resellers' => !empty($resellers)?$resellers:0,
                'distributors' =>  !empty($distributors)?$distributors:0,
                'partners' => !empty($partners)?$partners:0,
                'system_integrators' => !empty($system_integrators)?$system_integrators:0,
                'gigabyte_employees' => !empty($gigabyte_employees)?$gigabyte_employees:0,
                'esf' => !empty($esf)?$esf:0,
                'fid' => $fid,
                'file_path' => $filepath,
                'resolution' => $img_resolution,
                'dimension' => $dimension,
                'filesize' => $filesize,
                'extension' => $extension
            ))
            ->execute();
    }else{
       drupal_set_message('Required fields are empty');
    }
    //drupal_goto('partner/upload-assets');
}

/*function asset_upload_views_default_views_alter(&$views) {
    print_pre($views,1);
    if (isset($views['asset_uploads'])) {
        $views['taxonomy_term']->display['default']->display_options['title'] = 'Categories';
    }
}*/

function asset_upload_views_pre_render(&$view) {
   //print_pre($view,1);
    // This example alters the title of the node:nid field in the Views UI.
   // global $image_url;

    global $user;
    $usr = user_load($user->uid);
    foreach($usr->roles as $key => $value){
        if($key != 2){
            $role['value'] = $value;
            $role['id'] = $key;
        }
    }
    //print_pre($role,1);
    global $base_url;
    drupal_add_js($base_url.'/sites/all/modules/custom/make_a_request/js/dataTables.bootstrap.min.js');
    drupal_add_js($base_url.'/sites/all/modules/custom/make_a_request/js/jquery.dataTables.min.js');
    drupal_add_js($base_url.'/sites/all/modules/custom/make_a_request/js/dataTables.buttons.min.js');
    switch($view->name){
        case 'clone_of_entityforms':
            //print_pre($view->result,1);
            foreach($view->result as $key => $value){
                //print_pre($value,1);
                $file_data = array();
                $roles_permitted = array();
                $access = false;
                foreach($value->field_field_permitted_roles as $rkey => $rval){
                    $role_permitted[] = $rval['raw']['rid'];
                    if($role['id'] == $rval['raw']['rid']){
                        $access = true;
                    }
                }
                /*echo $role['id'];
                exit;*/
                if (in_array('administrator', array_values($user->roles))) {
                    $access = true;
                }
                if($access) {
                    //print_pre($roles_permitted, 1);
                    if (!empty($value->field_field_upload_file)) {
                        foreach ($value->field_field_upload_file as $k => $v) {
                            //print_pre($v,1);
                            $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] = "<table class='download-file-type-info-table'><tr>";
                            $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= "<th>Download</th>";
                            $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= "<th>Resolution</th>";
                            $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= "<th>Dimension</th>";
                            $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= "<th>Size</th></tr>";

                            foreach ($v['rendered']['entity']['field_collection_item'] as $ke => $val) {
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= "<tr>";
                                // print_pre($val,1);
                                if (!empty($val['#entity']->field_upload_asset['und'][0])) {
                                    $file_data['file'] = $val['#entity']->field_upload_asset['und'][0];
                                    $file_data['res'] = $val['#entity']->field_asset_resolution['und'][0];

                                }
                                //print_pre($file_data,1);
                                $ext = explode(".", $file_data['file']['uri']);
                                if (($file_data['file']['filesize'] / 1000) <= 1023) {
                                    $size = round(($file_data['file']['filesize'] / 1024), 2) . ' KB';
                                } else if (($file_data['file']['filesize'] / 1000) > 1023) {
                                    $size = round(($file_data['file']['filesize'] / (1024 * 1024)), 2) . ' MB';
                                }
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '<td><a href="' . $base_url . '/sites/default/files/file_uploads/assets/' . $file_data['file']['filename'] . '" >' . strtoupper($ext[count($ext) - 1]) . '</a> </td>';
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '<td><p class="internal-asset-info-p">' . $file_data['res']['value'] . '</p></td>';
                                if (!empty($file_data['file']['metadata']['width']) && !empty($file_data['file']['metadata']['height'])) {
                                    $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '<td><p class="internal-asset-info-p">' . $file_data['file']['metadata']['width'] . ' x ' . $file_data['file']['metadata']['height'] . '</p></td>';
                                } else {
                                    $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '<td><p class="internal-asset-info-p">-</p></td>';
                                }
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '<td><p class="internal-asset-info-p">' . $size . '</p></td>';
                                $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '</tr>';
                            }
                            $view->result[$key]->field_field_upload_file[$k]['rendered']['#markup'] .= '</table>';
                        }

                    } else {
                        $file_data['file']['uri'] = "noimage.png";
                    }


                   /* $rev_id_jpg = $view->result[$key]->_field_data['nid']['entity']->field_jpg['und'][0]['value'];
                    if(!empty($file_data['fid']))
                        $view->result[$key]->field_field_jpg[0]['rendered']['entity']['field_collection_item'][$rev_id_jpg]['field_dimension_jpg']['#markup'] = "<div class='field field-name-field-dimension-jpg field-type-file field-label-inline clearfix'><div class='field-label'>Dimensions:</div><div class='field-items'><div class='field-item even'>{$file_data['width']} X {$file_data['height']}</div></div></div>";
                    if(!empty($file_data)){
                        $view->result[$key]->field_field_assets_image_preview[0]['rendered']['#markup'] = "<a class='assets-preview-image' href='".image_style_url('large',$file_data['uri'])."' ><img src='".image_style_url('medium',$file_data['uri'])."'></a>";
                    }*/
                    $view->result[$key]->field_field_image_preview_assets[0]['rendered']['#markup'] = "<a class='assets-preview-image' href='".image_style_url('large',$file_data['file']['uri'])."' ><img src='".image_style_url('medium',$file_data['file']['uri'])."'></a>";
                    unset($file_data);
                }else{
                    unset($view->result[$key]);
                }
            }
        break;

    }
}
