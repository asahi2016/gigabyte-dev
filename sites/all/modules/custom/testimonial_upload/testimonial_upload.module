<?php

function testimonial_upload_form_testimonial_node_form_alter(&$form,&$form_state){

        $form['title']['#title'] ='Testimonial Name';
        $form['#validate'][] = 'testimonial_upload_form_validation';
        $form['options']['promote']['#value'] = 0;
        $form['ajax-submit']['#value'] = t('Submit');
        $form['#submit'][] = 'testimonial_upload_form_submit';
}

function testimonial_upload_form_validation(&$form,&$form_state){

    testimonial_upload_errors_reset($form);
}

function testimonial_upload_form_submit(&$form,&$form_state){

}

function testimonial_upload_errors_reset(&$element){

    // Check for errors and settings
    $errors = form_get_errors();

    if( ! isset( $_SESSION[ 'messages' ] ) ) {
        return;
    }

    $reset_errors = array();

    // Recurse through all children.
    foreach( element_children( $element ) as $key ) {
        if( isset( $element[ $key ] ) && $element[ $key ] ) {
            $reset_errors += testimonial_upload_errors_reset( $element[ $key ] );
        }
    }

    $element_id = implode( '][', $element[ '#parents' ] );

    if ( !empty( $errors[ $element_id ] )) {
        $error_message = $errors[ $element_id ];

        // Get error id
        $error_id = array_search( $error_message, $_SESSION[ 'messages' ][ 'error' ] );

        if( $error_id !== FALSE ) {
            unset( $_SESSION[ 'messages' ][ 'error' ][ $error_id ] );
            $_SESSION[ 'messages' ][ 'error' ] = array_values( $_SESSION[ 'messages' ][ 'error' ]  );

            if( count( $_SESSION[ 'messages' ][ 'error' ] ) <= 0 ) {
                unset( $_SESSION[ 'messages' ][ 'error' ] );
            }

            switch($element['#type']){

                case 'textfield':
                    $error_message = str_replace('Testimonial Name field is required.','Testimonial Name field is required.',$error_message);
                    break;
                case 'image':
                    $error_message = str_replace('PDF Image field is required.','PDF Image Cannot be empty.',$error_message);
                    break;

            }

            $element[ '#suffix' ] = '<span class="custom-error '.$element[ '#id' ].'" >'.$error_message.'</span>';

            $reset_errors[ $element[ '#id' ] ] = $error_message;
        }
    }

    return $reset_errors;

}