<?php

function intel_technology_provider_init(){

    drupal_add_js(drupal_get_path('module', 'custom').'/intel_technology_provider/js/intel_technology_provider.js',array('scope' => 'footer'));
}


function intel_technology_provider_menu(){

    $items['partner/intel-technology-provider'] = array(
        'title' => '',
        'page callback' => 'display_intel_technology_provider_models', // Render HTML
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'access callback' => TRUE,
    );

    return $items;

}


function display_intel_technology_provider_models(){

    return theme('intel_technology_provider_models', array('data' => ''));
}


/**
 * Implements hook_block_info().
 */
function intel_technology_provider_block_info() {

    $blocks['intel_motherboard_models'] = array(
        'info' => t('QUALIFYING MOTHERBOARD MODELS'),
    );

    $blocks['intel_brix_models'] = array(
        'info' => t('QUALIFYING BRIX MODELS'),
    );

    return $blocks;
}


/**
 * Implements hook_block_view().
 */
function intel_technology_provider_block_view($delta = '') {
    $block = array();

    switch ($delta) {
        case 'intel_motherboard_models':
            $block['content'] = theme('intel_motherboard_models', array('data' => ''));
            break;

        case 'intel_brix_models':

            $block['content'] = theme('intel_brix_models', array('data' => ''));
            break;
    }

    return $block;
}

/**
 * Implements hook_theme().
 */
function intel_technology_provider_theme(){

    $path = drupal_get_path('module', 'intel_technology_provider') . '/templates';

    return array(
                'intel_technology_provider_models' => array(
                    'path' => $path,
                    'template' => 'intel-technology-provider-models',
                    'variables' => array('data' => NULL),
                ),
                'intel_motherboard_models' => array(
                    'path' => $path,
                    'template' => 'intel-motherboard-models',
                    'variables' => array('data' => NULL),
                ),
                'intel_brix_models' => array(
                    'path' => $path,
                    'template' => 'intel-brix-models',
                    'variables' => array('data' => NULL),
                )
              );
}


function template_preprocess_intel_technology_provider_models(&$variables){
    //$term = taxonomy_term_load($_POST['term_id']);
    $vocabs = taxonomy_get_vocabularies(NULL);
    foreach ($vocabs as $vocab_object) {
       //echo $vocab_object->name."<br>";
    }
    $name = 'QUALIFYING MOTHERBOARD MODELS';
    //$myvoc = taxonomy_vocabulary_machine_name_load($name);
    $vocabularies = taxonomy_vocabulary_load_multiple(NULL, array('machine_name' => $name));
    //$tree = taxonomy_get_tree($myvoc->vid);

    $query = db_select('taxonomy_vocabulary', 'tv');
    $query->fields('tv', array(
        'machine_name',
        'vid',
    ));
    $query->condition('tv.name', $name, '=');
    $vocabulary = $query->execute()->fetchObject();

    $tree = taxonomy_vocabulary_load_multiple($vids = array($vocabulary->vid));
    $tree = taxonomy_get_tree($vocabulary->vid);

    print_pre($tree);

   // print_pre($variables,1);
    return $variables;

}

function template_preprocess_intel_motherboard_models(&$variables){

    $term = taxonomy_term_load($_POST['term_id']);
    return $variables;

}

function template_preprocess_intel_brix_models(&$variables){
    //$term = taxonomy_term_load($_POST['term_id']);
    return $variables;

}



