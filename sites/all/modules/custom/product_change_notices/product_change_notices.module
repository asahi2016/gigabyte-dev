<?php

/**
 * Module for handling PCN upload and auto-send mail whenever a PCN is submitted
 */

/**
 * @param $form
 * @param $form_state
 * @param $form_id
 *
 * Alter form function: After submission, an email with the mail content input in the form must be sent
 * to USA or Canada Mailing List based on Country Selected
 */

function product_change_notices_form_product_change_notices_node_form_alter(&$form, &$form_state, $form_id){
    //print_pre($form,1);
    $form['options']['promote']['#value'] = 0;
    $form['additional_settings']['#access'] = FALSE;
    $form['actions']['delete']['#access'] = FALSE;
    $form['options']['status']['#value'] = 1;
    $form['ajax-submit']['#submit'][] = 'send_product_change_notices_mail';
    $form['ajax-submit']['#value'] = t('Submit');
    unset($form['ajax-submit']['#ajax']);
}

function send_product_change_notices_mail(&$form, &$form_state){
    $values = $form_state['values'];
    $mailing_list = isset($values['field_mailing_list']['und'][0]['value'])?$values['field_mailing_list']['und'][0]['value']:'';
    //print_pre($values,1);
    //Get all mailchimp lists
    $mailchimp_lists = mailchimp_get_lists(array());

    $mail_list_id = null;

    foreach ($mailchimp_lists as $mail_key => $list){

        //Compare lists name with exists mailchimp lists
        if(!empty($list->id) && $list->name == trim($mailing_list)){
            $mail_list_id = $list->id;
        }
    }
    $recipient = array('list_id' => $mail_list_id);
    $template_content = (isset($values['body'])) ? mailchimp_campaign_parse_template_content($values['body']) : array();
    $settings = (object) array(
        'subject_line' => $values['title'],
        'title' => $values['title'],
        'from_name' => check_plain($values['name']),
        'reply_to' => 'krishna.asahi@gmail.com',
        //'reply_to' => $values['from_email'],
    );

    $template_id = !empty($values['field_mail_template_pcn']['und'][0]['value'])?$values['field_mail_template_pcn']['und'][0]['value']:2000094;
    $campaign_id = NULL;
    mailchimp_campaign_save_campaign($template_content,$recipient,$settings,$template_id);

    $current_url = url(current_path(), array('absolute' => TRUE));
    $form_state['redirect'] = $current_url;
    //print_pre($template_content,1);
}


/**
 * Parses template content to remove wrapper elements from tree.
 *
 * @param array $content
 *   The template content array.
 *
 * @return array
 *   The template content array minus wrapper elements.
 */
function mailchimp_campaign_parse_template_content($content) {
    $template_content = array();
    $content_keys = array_keys($content);
    foreach ($content_keys as $content_key) {
        if (strpos($content_key, '_wrapper') !== FALSE) {
            // If this element is a wrapper, add the element contained
            // within the wrapper to the template content.
            $new_content_key = str_replace('_wrapper', '', $content_key);
            $template_content[$new_content_key] = $content[$content_key][$new_content_key];
        }
        else {
            // If this element is not a wrapper, add it to the template content.
            $template_content[$content_key] = $content[$content_key];
        }
    }
    return $template_content;
}